/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)

    // This dependency is for connecting to WebSocket servers.
    implementation("org.java-websocket:Java-WebSocket:1.5.6")

    // This dependency is for JSON encode / decode.
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.16.0")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Select a different main class based on specified property
    if (hasProperty("launch")) {
        mainClass.set("${property("launch")}")
    }
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()

    // Show the STDOUT and STDERR during test execution.
    testLogging.showStandardStreams = true
}
